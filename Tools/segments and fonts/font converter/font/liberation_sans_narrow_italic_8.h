#ifndef liberation_sans_narrow_italic_8_H
#define liberation_sans_narrow_italic_8_H
#include <stdint.h>
// font: Liberation Sans Narrow
// style: italic
// size: 8
// entropy: 68.897169527 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,2,4,8,13,19,23,24,26,28,31,34,35,37,38,40,44,47,51,55,59,63,67,70,74,77,78,79,83,87,91,94,100,104,108,113,118,122,126,131,136,138,142,147,150,155,160,165,170,175,180,184,188,193,197,203,207,211,215,218,219,221,224,227,228,232,236,240,244,248,250,254,258,260,261,265,267,273,277,281,285,289,292,295,297,301,305,310,313,317,321,324,325,328};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
2,2,4,5,6,4,1,2,2,3,3,1,2,1,2,4,3,4,4,4,4,4,3,4,3,1,1,4,4,4,3,6,4,4,5,5,4,4,5,5,2,4,5,3,5,5,5,5,5,5,4,4,5,4,6,4,4,4,3,1,2,3,3,1,4,4,4,4,4,2,4,4,2,1,4,2,6,4,4,4,4,3,3,2,4,4,5,3,4,4,3,1,3,4};
PROGMEM prog_uint8_t  font_data[332] = {
0b00010100,
0b11100000,

0b11000000,
0b11000000,

0b00111100,
0b01110000,
0b01111100,
0b00110000,

0b00001100,
0b11101110,
0b11110100,
0b10011100,
0b01000000,

0b01110000,
0b10010100,
0b11111000,
0b01111100,
0b10100100,
0b00111000,

0b00011100,
0b01110100,
0b10111000,
0b11110100,

0b11000000,

0b00111111,
0b11000000,

0b10000110,
0b01111000,

0b01100000,
0b11000000,
0b01100000,

0b00010000,
0b00111000,
0b00010000,

0b00000110,

0b00010000,
0b00010000,

0b00000100,

0b00011100,
0b11100000,

0b01111000,
0b10000100,
0b10001100,
0b11111000,

0b00000100,
0b01011100,
0b11100100,

0b00000100,
0b10001100,
0b10010100,
0b01100000,

0b00001000,
0b10000100,
0b10100100,
0b11011000,

0b00011000,
0b00101000,
0b11111100,
0b00001000,

0b00101000,
0b11010100,
0b10100100,
0b10111000,

0b00111000,
0b11100100,
0b10100100,
0b10111000,

0b10001100,
0b10110000,
0b11000000,

0b00011000,
0b11010100,
0b10100100,
0b11011000,

0b01110100,
0b10010100,
0b11111000,

0b00100100,

0b00100000,

0b00010000,
0b00110000,
0b00101000,
0b01001000,

0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000000,
0b00101000,
0b00101000,
0b00010000,

0b10001100,
0b10010000,
0b11100000,

0b00111100,
0b11011110,
0b10100110,
0b10011110,
0b11000100,
0b01111000,

0b00001100,
0b00111000,
0b11001000,
0b00111100,

0b00011100,
0b11100100,
0b10100100,
0b11011000,

0b01111000,
0b11000100,
0b10000100,
0b10001000,
0b01000000,

0b00111100,
0b11000100,
0b10000100,
0b10001100,
0b01111000,

0b00011100,
0b11100100,
0b10100100,
0b10100100,

0b00111100,
0b11010000,
0b10010000,
0b10010000,

0b00111000,
0b01000100,
0b10000100,
0b10010100,
0b01011000,

0b00011100,
0b11100000,
0b00100000,
0b00111100,
0b11000000,

0b00011100,
0b11100000,

0b00001100,
0b00000100,
0b11111000,
0b10000000,

0b00011100,
0b11110000,
0b01111000,
0b11000100,
0b10000000,

0b00111100,
0b11000100,
0b00000100,

0b01111100,
0b11000000,
0b00111100,
0b00011000,
0b11111100,

0b01111100,
0b11000000,
0b00110000,
0b00011100,
0b11100000,

0b01111000,
0b11000100,
0b10000100,
0b10000100,
0b01111000,

0b00111100,
0b11010000,
0b10010000,
0b10010000,
0b01100000,

0b00111000,
0b01000100,
0b10000111,
0b10000101,
0b01111000,

0b00111100,
0b11010000,
0b10010000,
0b10011100,
0b11100000,

0b00001000,
0b11100100,
0b10010100,
0b10011100,

0b10000000,
0b10011100,
0b11100000,
0b10000000,

0b01111000,
0b10000100,
0b00000100,
0b00011100,
0b11100000,

0b11111100,
0b00011000,
0b01100000,
0b10000000,

0b11111100,
0b00111000,
0b11111100,
0b00001100,
0b01110000,
0b10000000,

0b00000100,
0b11011000,
0b00111000,
0b11000100,

0b11000100,
0b00111000,
0b01000000,
0b10000000,

0b00000100,
0b10011100,
0b10100100,
0b11000100,

0b00111111,
0b11000001,
0b10000000,

0b11111100,

0b10001111,
0b11110000,

0b00100000,
0b11000000,
0b01100000,

0b00000010,
0b00000010,
0b00000010,

0b10000000,

0b00011100,
0b00110100,
0b00111100,
0b00110100,

0b01111100,
0b10010100,
0b00100100,
0b00111000,

0b00011000,
0b00100100,
0b00100100,
0b00100000,

0b00011100,
0b00100100,
0b00111100,
0b11100000,

0b00011100,
0b00110100,
0b00110100,
0b00110000,

0b00111100,
0b11100000,

0b00011111,
0b00100101,
0b00101110,
0b00110000,

0b01111100,
0b10010000,
0b00100100,
0b00111000,

0b00011100,
0b10100000,

0b10100000,

0b01111100,
0b10010000,
0b00111100,
0b00100000,

0b00011100,
0b11100000,

0b00011100,
0b00100000,
0b00111100,
0b00100000,
0b00100000,
0b00111100,

0b00011100,
0b00100000,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00100100,
0b00111000,

0b00111111,
0b00010100,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00011111,
0b00100000,

0b00001100,
0b00110000,
0b00100000,

0b00110100,
0b00110100,
0b00101100,

0b01111100,
0b00100100,

0b00111100,
0b00000100,
0b00011100,
0b00100000,

0b00110000,
0b00001100,
0b00010000,
0b00100000,

0b00111100,
0b00001100,
0b00110000,
0b00111100,
0b00111100,

0b00000100,
0b00111000,
0b00100100,

0b00110001,
0b00001110,
0b00011000,
0b00100000,

0b00000100,
0b00101100,
0b00110100,
0b00100100,

0b00110111,
0b11000001,
0b10000000,

0b11111111,

0b10000111,
0b11110100,
0b00001000,

0b00100000,
0b00100000,
0b00010000,
0b00110000};
#endif
