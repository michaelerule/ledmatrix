#ifndef liberation_sans_narrow_bold_8_H
#define liberation_sans_narrow_bold_8_H
#include <stdint.h>
// font: Liberation Sans Narrow
// style: bold
// size: 8
// entropy: 68.0267590603 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,1,3,7,11,17,22,23,25,27,30,33,34,36,37,39,42,45,49,52,55,58,62,65,69,72,73,74,78,82,86,90,97,101,105,109,114,117,120,125,129,130,133,137,140,145,149,154,158,163,167,171,174,178,182,188,192,197,201,203,205,207,211,215,216,219,223,227,231,234,237,241,245,246,247,250,251,257,261,265,269,273,275,279,282,286,289,294,297,300,304,307,308,311};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
1,2,4,4,6,5,1,2,2,3,3,1,2,1,2,3,3,4,3,3,3,4,3,4,3,1,1,4,4,4,4,7,4,4,4,5,3,3,5,4,1,3,4,3,5,4,5,4,5,4,4,3,4,4,6,4,5,4,2,2,2,4,4,1,3,4,4,4,3,3,4,4,1,1,3,1,6,4,4,4,4,2,4,3,4,3,5,3,3,4,3,1,3,4};
PROGMEM prog_uint8_t  font_data[315] = {
0b11110100,

0b11000000,
0b11000000,

0b00101100,
0b01111000,
0b01111100,
0b00101000,

0b01101000,
0b10100100,
0b11111100,
0b11011000,

0b11110000,
0b10010100,
0b11111000,
0b11111100,
0b00100100,
0b00111100,

0b00011100,
0b11100100,
0b10111100,
0b11001000,
0b00010100,

0b11000000,

0b01111110,
0b10000001,

0b10000001,
0b01111110,

0b01100000,
0b11000000,
0b01100000,

0b00010000,
0b00111000,
0b00010000,

0b00000110,

0b00010000,
0b00010000,

0b00000100,

0b00011110,
0b11100000,

0b01111000,
0b10000100,
0b01111000,

0b10000100,
0b11111100,
0b00000100,

0b11000100,
0b10011100,
0b11110100,
0b00000100,

0b11000100,
0b10010100,
0b11101100,

0b00011000,
0b01111100,
0b00001000,

0b11111100,
0b10100100,
0b10111000,

0b01111000,
0b10100100,
0b10100100,
0b00111000,

0b10000000,
0b10111100,
0b11000000,

0b11011000,
0b10100100,
0b10100100,
0b11011000,

0b11110100,
0b10010100,
0b01111000,

0b00100100,

0b00100110,

0b00010000,
0b00101000,
0b00101000,
0b01000000,

0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000000,
0b00101000,
0b00101000,
0b00010000,

0b01000000,
0b10010100,
0b10110000,
0b01100000,

0b00111100,
0b01000110,
0b10111110,
0b11000110,
0b10111110,
0b11000100,
0b01111000,

0b00000100,
0b00111000,
0b11001000,
0b00111100,

0b11111100,
0b10100100,
0b10100100,
0b11011100,

0b01111000,
0b10000100,
0b10000100,
0b11001100,

0b11111100,
0b10000100,
0b10000100,
0b11001100,
0b01111000,

0b11111100,
0b10100100,
0b10100100,

0b11111100,
0b10010000,
0b10010000,

0b01111000,
0b10000100,
0b10000100,
0b10010100,
0b01011000,

0b11111100,
0b00100000,
0b00100000,
0b11111100,

0b11111100,

0b00001100,
0b10000100,
0b11111100,

0b11111100,
0b00110000,
0b01010000,
0b10001100,

0b11111100,
0b00000100,
0b00000100,

0b11111100,
0b11100000,
0b00011100,
0b11110000,
0b11111100,

0b11111100,
0b11100000,
0b00011000,
0b11111100,

0b01111000,
0b10000100,
0b10000100,
0b10000100,
0b01111000,

0b11111100,
0b10010000,
0b10010000,
0b11100000,

0b01111000,
0b10000100,
0b10000110,
0b10000101,
0b01111001,

0b11111100,
0b10010000,
0b10010000,
0b11111100,

0b11101100,
0b10100100,
0b10010100,
0b01011100,

0b10000000,
0b11111100,
0b10000000,

0b11111000,
0b00000100,
0b00000100,
0b11111000,

0b11000000,
0b01111000,
0b00011100,
0b11100000,

0b11100000,
0b00011100,
0b11111000,
0b11110000,
0b00001100,
0b11110000,

0b10000100,
0b01011000,
0b01110000,
0b10001100,

0b10000000,
0b01100000,
0b00011100,
0b01100000,
0b10000000,

0b10001100,
0b10010100,
0b11100100,
0b10000100,

0b11111111,
0b10000001,

0b11110000,
0b00001110,

0b10000001,
0b11111111,

0b00110000,
0b11000000,
0b11100000,
0b00010000,

0b00000010,
0b00000010,
0b00000010,
0b00000010,

0b10000000,

0b00111100,
0b00110100,
0b00111100,

0b11111100,
0b00100100,
0b00100100,
0b00111100,

0b00011000,
0b00100100,
0b00100100,
0b00001000,

0b00111100,
0b00100100,
0b00100100,
0b11111100,

0b00111000,
0b00110100,
0b00110100,

0b00100000,
0b11111100,
0b10100000,

0b00111100,
0b00100101,
0b00100101,
0b00111110,

0b11111100,
0b00100000,
0b00100000,
0b00111100,

0b10111100,

0b10111111,

0b11111100,
0b00010000,
0b00101100,

0b11111100,

0b00111100,
0b00100000,
0b00100000,
0b00111100,
0b00100000,
0b00111100,

0b00111100,
0b00100000,
0b00100000,
0b00111100,

0b00011000,
0b00100100,
0b00100100,
0b00011000,

0b00111111,
0b00100100,
0b00100100,
0b00111100,

0b00111100,
0b00100100,
0b00100100,
0b00111111,

0b00111100,
0b00100000,

0b00110100,
0b00110100,
0b00101100,
0b00001100,

0b00100000,
0b01111100,
0b00100100,

0b00111100,
0b00000100,
0b00000100,
0b00111100,

0b00110000,
0b00001100,
0b00111100,

0b00111000,
0b00001100,
0b00110000,
0b00011100,
0b00111000,

0b00100100,
0b00011000,
0b00111100,

0b00110001,
0b00001111,
0b00111100,

0b00100100,
0b00101100,
0b00110100,
0b00000100,

0b00001000,
0b11110111,
0b10000001,

0b11111111,

0b10000001,
0b11110111,
0b00001000,

0b00010000,
0b00010000,
0b00010000,
0b00010000};
#endif
