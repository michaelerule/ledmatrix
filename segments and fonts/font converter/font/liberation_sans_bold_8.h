#ifndef liberation_sans_bold_8_H
#define liberation_sans_bold_8_H
#include <stdint.h>
// font: Liberation Sans
// style: bold
// size: 8
// entropy: 68.0626350559 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,1,3,6,9,16,21,22,24,26,29,34,35,37,38,40,43,46,49,52,56,59,62,65,68,71,72,73,77,81,85,89,97,102,106,111,116,119,122,127,132,133,136,141,144,149,153,158,161,166,170,174,179,184,189,198,203,208,212,214,216,218,222,227,229,233,236,239,243,246,249,253,257,258,260,263,264,269,273,277,281,285,287,290,293,296,300,306,310,314,317,320,321,324};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
1,2,3,3,7,5,1,2,2,3,5,1,2,1,2,3,3,3,3,4,3,3,3,3,3,1,1,4,4,4,4,8,5,4,5,5,3,3,5,5,1,3,5,3,5,4,5,3,5,4,4,5,5,5,9,5,5,4,2,2,2,4,5,2,4,3,3,4,3,3,4,4,1,2,3,1,5,4,4,4,4,2,3,3,3,4,6,4,4,3,3,1,3,4};
PROGMEM prog_uint8_t  font_data[328] = {
0b11110100,

0b11000000,
0b11000000,

0b11111100,
0b00101000,
0b11111100,

0b01111100,
0b11111110,
0b01111100,

0b11110000,
0b10010100,
0b11111000,
0b00110000,
0b01111100,
0b10100100,
0b00111100,

0b00011100,
0b11100100,
0b10111100,
0b11001100,
0b00010100,

0b11000000,

0b01111110,
0b10000001,

0b10000001,
0b01111110,

0b01100000,
0b11000000,
0b01100000,

0b00010000,
0b00010000,
0b01111100,
0b00010000,
0b00010000,

0b00000110,

0b00010000,
0b00010000,

0b00000100,

0b00011100,
0b11100000,

0b01111000,
0b10000100,
0b01111000,

0b00000100,
0b11111100,
0b00000100,

0b11001100,
0b10010100,
0b11100100,

0b11001100,
0b10100100,
0b11011100,

0b00101000,
0b11001000,
0b11111100,
0b00001000,

0b11101100,
0b10100100,
0b10111100,

0b01111000,
0b10100100,
0b10111100,

0b10000000,
0b10011100,
0b11100000,

0b11011100,
0b10100100,
0b11011100,

0b11110100,
0b10010100,
0b01111000,

0b00100100,

0b00100110,

0b00010000,
0b00101000,
0b00101000,
0b01000100,

0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000100,
0b00101000,
0b00101000,
0b00010000,

0b01000000,
0b10010100,
0b10100000,
0b11100000,

0b00111100,
0b01000100,
0b10111010,
0b11001010,
0b11001010,
0b11111010,
0b11001100,
0b01110000,

0b00001100,
0b01111000,
0b10001000,
0b01111000,
0b00000100,

0b11111100,
0b10100100,
0b10100100,
0b11011100,

0b01111000,
0b10000100,
0b10000100,
0b10000100,
0b01001000,

0b11111100,
0b10000100,
0b10000100,
0b10000100,
0b01111000,

0b11111100,
0b10100100,
0b10100100,

0b11111100,
0b10010000,
0b10010000,

0b01111000,
0b10000100,
0b10000100,
0b10010100,
0b01011000,

0b11111100,
0b00100000,
0b00100000,
0b00100000,
0b11111100,

0b11111100,

0b00001100,
0b10000100,
0b11111100,

0b11111100,
0b00100000,
0b01110000,
0b11001000,
0b10000100,

0b11111100,
0b00000100,
0b00000100,

0b11111100,
0b11110000,
0b00001100,
0b11110000,
0b11111100,

0b11111100,
0b01100000,
0b00011100,
0b11111100,

0b01111000,
0b10000100,
0b10000100,
0b10000100,
0b01111000,

0b11111100,
0b10010000,
0b11110000,

0b01111000,
0b10000100,
0b10000110,
0b10000101,
0b01111001,

0b11111100,
0b10010000,
0b10011000,
0b11100100,

0b11101000,
0b10100100,
0b10010100,
0b01011100,

0b10000000,
0b10000000,
0b11111100,
0b10000000,
0b10000000,

0b11111000,
0b00000100,
0b00000100,
0b00000100,
0b11111000,

0b11000000,
0b00111000,
0b00000100,
0b00111000,
0b11000000,

0b11000000,
0b00111000,
0b00000100,
0b01111000,
0b10000000,
0b01111000,
0b00000100,
0b00111000,
0b11000000,

0b10000100,
0b01011000,
0b00100000,
0b01011000,
0b10000100,

0b10000000,
0b01100000,
0b00011100,
0b01100000,
0b10000000,

0b10001100,
0b10011100,
0b11100100,
0b11000100,

0b11111111,
0b10000001,

0b11100000,
0b00011100,

0b10000001,
0b11111111,

0b00100000,
0b11000000,
0b11000000,
0b00100000,

0b00000001,
0b00000001,
0b00000001,
0b00000001,
0b00000001,

0b10000000,
0b10000000,

0b00111100,
0b00110100,
0b00111100,
0b00000100,

0b11111100,
0b00100100,
0b00111100,

0b00111100,
0b00100100,
0b00101100,

0b00111100,
0b00100100,
0b00100100,
0b11111100,

0b00111100,
0b00110100,
0b00110100,

0b00100000,
0b11111100,
0b10100000,

0b00111101,
0b00100101,
0b00100101,
0b00111110,

0b11111100,
0b00100000,
0b00100000,
0b00011100,

0b10111100,

0b00000001,
0b10111111,

0b11111100,
0b00011000,
0b00100100,

0b11111100,

0b00111100,
0b00100000,
0b00111100,
0b00100000,
0b00111100,

0b00111100,
0b00100000,
0b00100000,
0b00011100,

0b00011000,
0b00100100,
0b00100100,
0b00011000,

0b00111111,
0b00100100,
0b00100100,
0b00011000,

0b00111100,
0b00100100,
0b00100100,
0b00111111,

0b00111100,
0b00100000,

0b00110100,
0b00110100,
0b00101100,

0b00100000,
0b01111100,
0b00100100,

0b00111100,
0b00000100,
0b00111100,

0b00100000,
0b00011100,
0b00001100,
0b00110000,

0b00110000,
0b00001100,
0b00111000,
0b00110000,
0b00001100,
0b00111000,

0b00100100,
0b00011000,
0b00011000,
0b00100100,

0b00100001,
0b00011101,
0b00001110,
0b00110000,

0b00100100,
0b00101100,
0b00110100,

0b00010000,
0b11101111,
0b10000001,

0b11111111,

0b10000001,
0b11101111,
0b00010000,

0b00010000,
0b00010000,
0b00010000,
0b00010000};
#endif
