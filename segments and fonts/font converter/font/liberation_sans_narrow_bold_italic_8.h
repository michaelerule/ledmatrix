#ifndef liberation_sans_narrow_bold_italic_8_H
#define liberation_sans_narrow_bold_italic_8_H
#include <stdint.h>
// font: Liberation Sans Narrow
// style: bold_italic
// size: 8
// entropy: 67.7073492801 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,2,4,8,12,18,22,23,25,27,30,33,34,36,37,40,44,47,51,54,57,61,65,68,71,75,77,79,83,87,91,94,101,105,109,114,119,123,127,132,137,139,143,148,152,158,163,168,172,177,182,186,189,194,198,205,209,213,217,220,221,223,227,230,231,234,238,241,245,249,252,256,260,262,264,267,269,275,279,283,287,291,294,297,299,303,307,312,315,319,322,326,327,330};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
2,2,4,4,6,4,1,2,2,3,3,1,2,1,3,4,3,4,3,3,4,4,3,3,4,2,2,4,4,4,3,7,4,4,5,5,4,4,5,5,2,4,5,4,6,5,5,4,5,5,4,3,5,4,7,4,4,4,3,1,2,4,3,1,3,4,3,4,4,3,4,4,2,2,3,2,6,4,4,4,4,3,3,2,4,4,5,3,4,3,4,1,3,4};
PROGMEM prog_uint8_t  font_data[334] = {
0b00010100,
0b11100000,

0b11000000,
0b11000000,

0b00101100,
0b01111000,
0b01111100,
0b00101000,

0b11100100,
0b11111110,
0b10100100,
0b11011000,

0b01110000,
0b10010100,
0b11111000,
0b01111100,
0b10100100,
0b00111000,

0b00011100,
0b11110100,
0b10111000,
0b11111100,

0b11000000,

0b00111111,
0b11000000,

0b00000011,
0b11111100,

0b01100000,
0b11000000,
0b01100000,

0b00010000,
0b00111000,
0b00010000,

0b00000110,

0b00010000,
0b00010000,

0b00000100,

0b00000100,
0b00111000,
0b11000000,

0b00111000,
0b11000100,
0b10011100,
0b01100000,

0b00000100,
0b11011100,
0b11100100,

0b00001100,
0b11011100,
0b10010100,
0b11100100,

0b10001100,
0b10100100,
0b11011000,

0b00011000,
0b01101000,
0b11111100,

0b00010000,
0b11111100,
0b10100100,
0b10111000,

0b00111000,
0b11100100,
0b10100100,
0b10111000,

0b10011100,
0b11100000,
0b11000000,

0b00011100,
0b11100100,
0b11011100,

0b01110100,
0b10010100,
0b10011100,
0b01110000,

0b00000100,
0b00100000,

0b00000110,
0b00100000,

0b00010000,
0b00101000,
0b00101000,
0b01000000,

0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000100,
0b00101000,
0b00101000,
0b00010000,

0b11000100,
0b10010000,
0b11100000,

0b00111100,
0b01000110,
0b10011110,
0b10100110,
0b10011110,
0b11000100,
0b01111000,

0b00000100,
0b00111000,
0b11001000,
0b11111100,

0b00011100,
0b11100100,
0b10100100,
0b11011100,

0b01111000,
0b11000100,
0b10000100,
0b11001000,
0b01000000,

0b00011100,
0b11100100,
0b10000100,
0b10001100,
0b01111000,

0b00011100,
0b11100100,
0b10100100,
0b10100100,

0b00011100,
0b11110000,
0b10010000,
0b10010000,

0b01111000,
0b11000100,
0b10000100,
0b10011100,
0b01000000,

0b00011100,
0b11100000,
0b00100000,
0b00111100,
0b11000000,

0b00011100,
0b11100000,

0b00001100,
0b00000100,
0b10111100,
0b11000000,

0b00011100,
0b11110000,
0b01111000,
0b11000100,
0b10000000,

0b00011100,
0b11100100,
0b00000100,
0b00000100,

0b00011100,
0b11100000,
0b01111100,
0b00110000,
0b11111100,
0b10000000,

0b00011100,
0b11100000,
0b00111000,
0b00111100,
0b11000000,

0b01111000,
0b11000100,
0b10000100,
0b10001100,
0b01111000,

0b00011100,
0b11110000,
0b10010000,
0b11110000,

0b01111000,
0b11000100,
0b10000111,
0b10000101,
0b01111000,

0b00011100,
0b11110000,
0b10010000,
0b10011100,
0b11100000,

0b00001000,
0b11100100,
0b10010100,
0b11011100,

0b10001100,
0b11110000,
0b10000000,

0b11111000,
0b00000100,
0b00000100,
0b00111000,
0b11000000,

0b11111100,
0b00011100,
0b01100000,
0b10000000,

0b11111100,
0b00111100,
0b00011100,
0b01100000,
0b11111100,
0b11111100,
0b10000000,

0b00000100,
0b11011000,
0b00111000,
0b11000100,

0b11100100,
0b00111000,
0b01000000,
0b10000000,

0b00001100,
0b10010100,
0b10100100,
0b11000000,

0b00011111,
0b11100001,
0b10000000,

0b11111000,

0b00000011,
0b11111100,

0b00010000,
0b11100000,
0b11100000,
0b00010000,

0b00000010,
0b00000010,
0b00000010,

0b10000000,

0b00011100,
0b00110100,
0b00111100,

0b00011100,
0b11100100,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00111100,

0b00011100,
0b00100100,
0b00111100,
0b11000000,

0b00011100,
0b00110100,
0b00110100,
0b00110000,

0b00111100,
0b11100000,
0b10100000,

0b00011111,
0b00100101,
0b00100111,
0b00111000,

0b00011100,
0b11100000,
0b00101100,
0b00110000,

0b00011100,
0b10100000,

0b00011111,
0b10100000,

0b00011100,
0b11110000,
0b00101100,

0b00011100,
0b11100000,

0b00011100,
0b00100000,
0b00101100,
0b00110000,
0b00100000,
0b00111100,

0b00001100,
0b00110000,
0b00101100,
0b00110000,

0b00011100,
0b00100100,
0b00100100,
0b00111000,

0b00011111,
0b00100100,
0b00100100,
0b00111000,

0b00011100,
0b00100010,
0b00100111,
0b00111000,

0b00000100,
0b00111000,
0b00100000,

0b00110100,
0b00110100,
0b00101100,

0b01111100,
0b00100100,

0b00011100,
0b00100100,
0b00001100,
0b00110000,

0b00110000,
0b00001100,
0b00011000,
0b00100000,

0b00111100,
0b00001100,
0b00110000,
0b00111100,
0b00111100,

0b00000100,
0b00111000,
0b00111100,

0b00100001,
0b00011110,
0b00011000,
0b00100000,

0b00000100,
0b00101100,
0b00110100,

0b00001000,
0b00011111,
0b11100001,
0b10000000,

0b11111111,

0b10000111,
0b11111000,
0b00010000,

0b00001000,
0b00010000,
0b00001000,
0b00001000};
#endif
