#ifndef liberation_sans_narrow_plain_8_H
#define liberation_sans_narrow_plain_8_H
#include <stdint.h>
// font: Liberation Sans Narrow
// style: plain
// size: 8
// entropy: 67.3549355744 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,1,4,8,12,18,23,24,26,28,31,34,35,37,38,40,44,48,53,57,60,63,67,70,74,78,79,80,84,88,92,96,102,106,109,113,117,120,123,128,132,133,136,140,142,146,150,155,158,163,167,170,173,177,181,187,191,196,200,201,203,204,207,211,212,217,221,225,229,233,236,240,244,245,246,249,250,255,259,263,267,271,273,276,279,283,286,291,294,297,301,304,305,308};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
1,3,4,4,6,5,1,2,2,3,3,1,2,1,2,4,4,5,4,3,3,4,3,4,4,1,1,4,4,4,4,6,4,3,4,4,3,3,5,4,1,3,4,2,4,4,5,3,5,4,3,3,4,4,6,4,5,4,1,2,1,3,4,1,5,4,4,4,4,3,4,4,1,1,3,1,5,4,4,4,4,2,3,3,4,3,5,3,3,4,3,1,3,4};
PROGMEM prog_uint8_t  font_data[312] = {
0b11110100,

0b11000000,
0b00000000,
0b11000000,

0b00111100,
0b01110000,
0b01111100,
0b00110000,

0b01101000,
0b10100100,
0b11111110,
0b11011100,

0b11110000,
0b10010100,
0b11111000,
0b01100000,
0b00111100,
0b00111100,

0b00011000,
0b11110100,
0b10101100,
0b11101000,
0b00010100,

0b11000000,

0b01111110,
0b10000001,

0b11000011,
0b00111100,

0b01100000,
0b11000000,
0b00100000,

0b00010000,
0b00111000,
0b00010000,

0b00000110,

0b00010000,
0b00010000,

0b00000100,

0b00011100,
0b11100000,

0b01111000,
0b10000100,
0b10000100,
0b01111000,

0b01000000,
0b10000100,
0b11111100,
0b00000100,

0b01000100,
0b10001100,
0b10010100,
0b11100100,
0b00000100,

0b10001000,
0b10000100,
0b10100100,
0b11011000,

0b00011000,
0b01111100,
0b00001000,

0b11111100,
0b10100100,
0b00111100,

0b01111000,
0b10100100,
0b10100100,
0b00011000,

0b10000000,
0b10111100,
0b11000000,

0b11011000,
0b10100100,
0b10100100,
0b11011000,

0b01100000,
0b10010100,
0b10010100,
0b01111000,

0b00100100,

0b00100110,

0b00010000,
0b00110000,
0b00101000,
0b01001000,

0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000100,
0b00101000,
0b00101000,
0b00010000,

0b01000000,
0b10000100,
0b10010000,
0b01100000,

0b00111100,
0b11011110,
0b10100110,
0b10111110,
0b11000100,
0b01111000,

0b00001100,
0b01111000,
0b11101000,
0b00011100,

0b11111100,
0b10100100,
0b11011100,

0b01111000,
0b10000100,
0b10000100,
0b10001100,

0b11111100,
0b10000100,
0b10000100,
0b01111000,

0b11111100,
0b10100100,
0b10100100,

0b11111100,
0b10010000,
0b10010000,

0b01111000,
0b10000100,
0b10000100,
0b10010100,
0b01011000,

0b11111100,
0b00100000,
0b00100000,
0b11111100,

0b11111100,

0b00001100,
0b10000100,
0b11111100,

0b11111100,
0b00010000,
0b01101100,
0b10000000,

0b11111100,
0b00000100,

0b11111100,
0b00011100,
0b00111000,
0b11111100,

0b11111100,
0b00110000,
0b00001100,
0b11111100,

0b01111000,
0b10000100,
0b10000100,
0b10000100,
0b01111000,

0b11111100,
0b10010000,
0b11110000,

0b01111000,
0b10000100,
0b10000110,
0b10000101,
0b01111000,

0b11111100,
0b10010000,
0b10011000,
0b11100100,

0b11101100,
0b10010100,
0b11011100,

0b10000000,
0b11111100,
0b10000000,

0b11111000,
0b00000100,
0b00000100,
0b11111000,

0b11000000,
0b00111100,
0b00011100,
0b11100000,

0b11110000,
0b00001100,
0b01110000,
0b11110000,
0b00011100,
0b11100000,

0b00000100,
0b11011000,
0b01111000,
0b10000100,

0b10000000,
0b01100000,
0b00011100,
0b01100000,
0b10000000,

0b10000100,
0b10011100,
0b10100100,
0b11000100,

0b11111111,

0b11100000,
0b00011100,

0b11111111,

0b00100000,
0b11000000,
0b00100000,

0b00000001,
0b00000001,
0b00000001,
0b00000001,

0b10000000,

0b00111100,
0b00110100,
0b00110100,
0b00111100,
0b00000100,

0b11111100,
0b00100100,
0b00100100,
0b00111100,

0b00011000,
0b00100100,
0b00100100,
0b00000100,

0b00111100,
0b00100100,
0b00100100,
0b11111100,

0b00111000,
0b00110100,
0b00110100,
0b00110000,

0b00100000,
0b11111100,
0b10100000,

0b00111100,
0b00100101,
0b00100101,
0b00111110,

0b11111100,
0b00100000,
0b00100000,
0b00111100,

0b10111100,

0b10111111,

0b11111100,
0b00010000,
0b00101100,

0b11111100,

0b00111100,
0b00100000,
0b00111100,
0b00100000,
0b00111100,

0b00111100,
0b00100000,
0b00100000,
0b00111100,

0b00111000,
0b00100100,
0b00100100,
0b00111000,

0b00111111,
0b00100100,
0b00100100,
0b00111100,

0b00111100,
0b00100100,
0b00100100,
0b00111111,

0b00111100,
0b00100000,

0b00110100,
0b00110100,
0b00101100,

0b00100000,
0b01111100,
0b00100100,

0b00111100,
0b00000100,
0b00000100,
0b00111100,

0b00110000,
0b00001100,
0b00111000,

0b00111100,
0b00001100,
0b00110000,
0b00001100,
0b00110000,

0b00100100,
0b00011000,
0b00100100,

0b00111001,
0b00001110,
0b00110000,

0b00100000,
0b00101100,
0b00110100,
0b00100100,

0b00001000,
0b11110111,
0b10000001,

0b11111110,

0b10000001,
0b11110111,
0b00001000,

0b00100000,
0b00100000,
0b00010000,
0b00100000};
#endif
