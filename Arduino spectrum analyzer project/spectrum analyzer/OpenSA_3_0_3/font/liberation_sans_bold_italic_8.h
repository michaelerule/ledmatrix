#ifndef liberation_sans_bold_italic_8_H
#define liberation_sans_bold_italic_8_H
#include <stdint.h>
// font: Liberation Sans
// style: bold_italic
// size: 8
// entropy: 68.5572552842 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,2,5,8,12,20,25,26,29,31,34,39,40,43,44,47,51,54,58,62,66,70,74,77,81,85,87,89,94,99,104,108,115,120,126,132,138,143,148,154,160,162,166,171,176,182,188,194,199,205,211,216,221,227,232,240,245,250,255,258,260,263,268,272,273,277,282,286,291,295,298,303,307,309,311,315,317,322,326,331,336,341,344,348,350,355,359,365,369,373,377,380,381,384};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
2,3,3,4,8,5,1,3,2,3,5,1,3,1,3,4,3,4,4,4,4,4,3,4,4,2,2,5,5,5,4,7,5,6,6,6,5,5,6,6,2,4,5,5,6,6,6,5,6,6,5,5,6,5,8,5,5,5,3,2,3,5,4,1,4,5,4,5,4,3,5,4,2,2,4,2,5,4,5,5,5,3,4,2,5,4,6,4,4,4,3,1,3,5};
PROGMEM prog_uint8_t  font_data[389] = {
0b00010100,
0b11100000,

0b11000000,
0b00000000,
0b11000000,

0b11111100,
0b00101000,
0b11111100,

0b00001100,
0b11101110,
0b11111100,
0b11000000,

0b01110000,
0b10010100,
0b11101000,
0b00010000,
0b00100000,
0b01011100,
0b10100100,
0b00111000,

0b00011100,
0b00010100,
0b11110100,
0b10101100,
0b11010100,

0b11000000,

0b00111110,
0b11000001,
0b10000000,

0b10000011,
0b01111100,

0b01100000,
0b11000000,
0b01100000,

0b00010000,
0b00010000,
0b01111100,
0b00010000,
0b00010000,

0b00000110,

0b00010000,
0b00010000,
0b00010000,

0b00000100,

0b00001100,
0b00110000,
0b11000000,

0b01111100,
0b11000100,
0b10001100,
0b11110000,

0b01000100,
0b10011100,
0b11100100,

0b00000100,
0b11011100,
0b10010100,
0b11100100,

0b00001100,
0b11100100,
0b10111100,
0b11000000,

0b00011000,
0b00101000,
0b11011100,
0b11101000,

0b00001100,
0b11100100,
0b10100100,
0b10111000,

0b01111000,
0b11100100,
0b10100100,
0b10111000,

0b10001100,
0b11110000,
0b11000000,

0b00011100,
0b11100100,
0b10100100,
0b11011000,

0b01111100,
0b10010100,
0b10011100,
0b01110000,

0b00000100,
0b00100000,

0b00000110,
0b00100000,

0b00010000,
0b00101000,
0b00101000,
0b00101000,
0b01000100,

0b00101000,
0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000100,
0b00101000,
0b00101000,
0b00101000,
0b00010000,

0b01000000,
0b10010100,
0b10100000,
0b11100000,

0b00111100,
0b01000110,
0b10111010,
0b11001010,
0b11111010,
0b11001100,
0b01110000,

0b00000100,
0b00011000,
0b01101000,
0b11001000,
0b00111100,

0b00011100,
0b11100100,
0b10100100,
0b10100100,
0b10100100,
0b11011000,

0b00111000,
0b01000100,
0b10000100,
0b10000100,
0b10001000,
0b01000000,

0b00011100,
0b11100100,
0b10000100,
0b10000100,
0b10001000,
0b01110000,

0b00011100,
0b11100100,
0b10100100,
0b10100100,
0b10000000,

0b00011100,
0b11110000,
0b10010000,
0b10010000,
0b10000000,

0b00111000,
0b01000100,
0b10000100,
0b10010100,
0b10011100,
0b01000000,

0b00011100,
0b11100000,
0b00100000,
0b00100000,
0b00111100,
0b11100000,

0b00011100,
0b11100000,

0b00001100,
0b00000100,
0b10011100,
0b11100000,

0b00011100,
0b11110000,
0b00100000,
0b01011000,
0b10000100,

0b00011100,
0b11100100,
0b00000100,
0b00000100,
0b00000100,

0b00011100,
0b11100000,
0b11111100,
0b00110000,
0b11011100,
0b11100000,

0b00011100,
0b11100000,
0b01100000,
0b00011000,
0b00011100,
0b11100000,

0b00111000,
0b01000100,
0b10000100,
0b10000100,
0b10001000,
0b01110000,

0b00011100,
0b11110000,
0b10010000,
0b10010000,
0b01100000,

0b00111000,
0b01000100,
0b10000111,
0b10000101,
0b10001100,
0b01110000,

0b00011100,
0b11110000,
0b10010000,
0b10011000,
0b10010100,
0b01100000,

0b00001100,
0b11100100,
0b10100100,
0b10011000,
0b01000000,

0b10000000,
0b10011100,
0b11100000,
0b10000000,
0b10000000,

0b00011000,
0b11100100,
0b00000100,
0b00000100,
0b00011000,
0b11100000,

0b11110000,
0b00001100,
0b00011000,
0b01100000,
0b10000000,

0b11111100,
0b00001000,
0b00110000,
0b01000000,
0b11111100,
0b00011000,
0b01100000,
0b10000000,

0b00000100,
0b11001000,
0b00110000,
0b01001100,
0b10000000,

0b10000000,
0b01111100,
0b00100000,
0b01000000,
0b10000000,

0b00000100,
0b10001100,
0b10110100,
0b11000100,
0b10000000,

0b00011111,
0b11100001,
0b10000000,

0b11100000,
0b00011100,

0b00000001,
0b10011111,
0b11100000,

0b00010000,
0b01100000,
0b10000000,
0b01100000,
0b00010000,

0b00000001,
0b00000001,
0b00000001,
0b00000001,

0b10000000,

0b00001100,
0b00111100,
0b00111100,
0b00000100,

0b00011100,
0b11110100,
0b00100100,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00101100,
0b00110000,

0b00011100,
0b00100100,
0b00100100,
0b00011100,
0b11100000,

0b00011100,
0b00110100,
0b00110100,
0b00110000,

0b00111100,
0b11100000,
0b10000000,

0b00011101,
0b00100101,
0b00100101,
0b00011110,
0b00100000,

0b00011100,
0b11110000,
0b00100000,
0b00111100,

0b00011100,
0b10100000,

0b00011111,
0b10100000,

0b00011100,
0b11110000,
0b00101100,
0b00100000,

0b00011100,
0b11100000,

0b00011100,
0b00100000,
0b00111100,
0b00100000,
0b00111100,

0b00011100,
0b00110000,
0b00100000,
0b00111100,

0b00011100,
0b00100100,
0b00100100,
0b00100100,
0b00111000,

0b00011111,
0b00110100,
0b00100100,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00100100,
0b00011111,
0b00100000,

0b00011100,
0b00110000,
0b00100000,

0b00000100,
0b00110100,
0b00101100,
0b00100000,

0b00111100,
0b01100100,

0b00011100,
0b00100100,
0b00000100,
0b00011100,
0b00100000,

0b00111000,
0b00000100,
0b00011000,
0b00100000,

0b00111100,
0b00001100,
0b00110000,
0b00111100,
0b00011100,
0b00100000,

0b00000100,
0b00111000,
0b00011100,
0b00100000,

0b00111011,
0b00000110,
0b00011000,
0b00100000,

0b00000100,
0b00101100,
0b00110100,
0b00100100,

0b00011111,
0b11100001,
0b10000000,

0b11111111,

0b00000001,
0b10001111,
0b11110000,

0b00010000,
0b00010000,
0b00010000,
0b00010000,
0b00010000};
#endif
