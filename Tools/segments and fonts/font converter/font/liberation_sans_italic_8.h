#ifndef liberation_sans_italic_8_H
#define liberation_sans_italic_8_H
#include <stdint.h>
// font: Liberation Sans
// style: italic
// size: 8
// entropy: 69.4333190086 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,2,4,8,13,19,24,25,28,30,33,38,39,41,42,45,49,52,56,60,64,68,72,75,79,82,84,86,89,92,95,98,105,110,115,122,128,133,138,143,149,151,155,160,163,170,176,182,187,193,199,204,209,215,220,228,233,237,242,245,246,248,251,255,256,260,264,268,273,277,280,284,287,289,291,295,297,301,304,308,312,316,319,323,326,331,335,341,345,349,353,355,356,359};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
2,2,4,5,6,5,1,3,2,3,5,1,2,1,3,4,3,4,4,4,4,4,3,4,3,2,2,3,3,3,3,7,5,5,7,6,5,5,5,6,2,4,5,3,7,6,6,5,6,6,5,5,6,5,8,5,4,5,3,1,2,3,4,1,4,4,4,5,4,3,4,3,2,2,4,2,4,3,4,4,4,3,4,3,5,4,6,4,4,4,2,1,3,4};
PROGMEM prog_uint8_t  font_data[363] = {
0b00110100,
0b11000000,

0b11000000,
0b11000000,

0b00111100,
0b11101000,
0b00111100,
0b11101000,

0b00001000,
0b11100100,
0b10111110,
0b11100100,
0b10011100,

0b01110100,
0b10011000,
0b11110000,
0b00111100,
0b01100100,
0b10111000,

0b00011100,
0b01100100,
0b10111100,
0b10101000,
0b11010100,

0b11000000,

0b00111110,
0b01000001,
0b10000000,

0b10000010,
0b01111100,

0b01100000,
0b11000000,
0b01100000,

0b00010000,
0b00010000,
0b01111100,
0b00010000,
0b00010000,

0b00000110,

0b00001000,
0b00001000,

0b00000100,

0b00001100,
0b00110000,
0b11000000,

0b01111100,
0b11000100,
0b10001100,
0b11111000,

0b01000100,
0b10011100,
0b11100100,

0b00001100,
0b01010100,
0b10010100,
0b11100000,

0b00001000,
0b10100100,
0b10100100,
0b11011000,

0b00011000,
0b00101000,
0b11011100,
0b11101000,

0b01100100,
0b11100100,
0b10100100,
0b10111000,

0b00111000,
0b11100100,
0b10100100,
0b10111000,

0b10001100,
0b10110000,
0b11000000,

0b00011100,
0b11100100,
0b10100100,
0b11011000,

0b01110100,
0b10010100,
0b11111000,

0b00000100,
0b00100000,

0b00000110,
0b00100000,

0b00010000,
0b00101000,
0b01000100,

0b00101000,
0b00101000,
0b00101000,

0b01000100,
0b00101000,
0b00010000,

0b01000100,
0b10010000,
0b11100000,

0b00111100,
0b01111110,
0b11001010,
0b11001010,
0b11111100,
0b11001000,
0b01110000,

0b00000100,
0b00011000,
0b01101000,
0b10001000,
0b01111100,

0b00011100,
0b11100100,
0b10100100,
0b10100100,
0b11011000,

0b00111000,
0b01000100,
0b10000100,
0b10000100,
0b10001100,
0b10001000,
0b01000000,

0b00011100,
0b11100100,
0b10000100,
0b10000100,
0b10001000,
0b01110000,

0b00011100,
0b11100100,
0b10100100,
0b10100100,
0b10000000,

0b00011100,
0b11110000,
0b10010000,
0b10010000,
0b10000000,

0b01111000,
0b11000100,
0b10000100,
0b10010100,
0b01011100,

0b00011100,
0b11110000,
0b00010000,
0b00010000,
0b00011100,
0b11100000,

0b00011100,
0b11100000,

0b00001100,
0b00000100,
0b10011100,
0b11100000,

0b00011100,
0b11110000,
0b00110000,
0b01001000,
0b10000100,

0b00011100,
0b11100100,
0b00000100,

0b00011100,
0b11100000,
0b11111100,
0b00001100,
0b00110000,
0b11011100,
0b11100000,

0b00011100,
0b11100000,
0b11100000,
0b00011100,
0b00011100,
0b11100000,

0b00111000,
0b01000100,
0b10000100,
0b10000100,
0b10001000,
0b01110000,

0b00011100,
0b11110000,
0b10010000,
0b10010000,
0b01100000,

0b00111000,
0b01000100,
0b10000111,
0b10000101,
0b10001000,
0b01110000,

0b00011100,
0b11110000,
0b10010000,
0b10011000,
0b10010100,
0b01100000,

0b00001000,
0b11100100,
0b10100100,
0b10010100,
0b10011000,

0b10000000,
0b10011100,
0b11100000,
0b10000000,
0b10000000,

0b00011000,
0b11101100,
0b00000100,
0b00000100,
0b00011000,
0b11100000,

0b11111000,
0b00000100,
0b00011000,
0b01100000,
0b10000000,

0b11111000,
0b00000100,
0b00111000,
0b11000000,
0b11111100,
0b00001100,
0b00110000,
0b11000000,

0b00000100,
0b11001000,
0b00110000,
0b01001100,
0b10000000,

0b11000000,
0b00111100,
0b01100000,
0b10000000,

0b00000100,
0b10001100,
0b10110100,
0b11000100,
0b10000000,

0b00001111,
0b11110001,
0b10000000,

0b11111100,

0b10001111,
0b11110000,

0b01100000,
0b10000000,
0b01100000,

0b00000001,
0b00000001,
0b00000001,
0b00000001,

0b10000000,

0b00111100,
0b00110100,
0b00111100,
0b00000100,

0b00011100,
0b11110100,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00100100,
0b00100100,

0b00011100,
0b00100100,
0b00100100,
0b00011100,
0b11100000,

0b00011100,
0b00110100,
0b00110100,
0b00110100,

0b00111100,
0b11100000,
0b10100000,

0b00011111,
0b00100101,
0b00011110,
0b00100000,

0b00011100,
0b11100000,
0b00111100,

0b00011100,
0b10100000,

0b00011111,
0b10100000,

0b00011100,
0b11101000,
0b00011100,
0b00100000,

0b00011100,
0b11100000,

0b00011100,
0b00100000,
0b00111100,
0b00111100,

0b00011100,
0b00100000,
0b00111100,

0b00011100,
0b00100100,
0b00100100,
0b00111000,

0b00011111,
0b00110100,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00011111,
0b00100000,

0b00011100,
0b00110000,
0b00100000,

0b00000100,
0b00110100,
0b00110100,
0b00101100,

0b00111100,
0b01100100,
0b00100000,

0b00011100,
0b00100100,
0b00000100,
0b00011100,
0b00100000,

0b00111100,
0b00000100,
0b00011000,
0b00100000,

0b00111100,
0b00001000,
0b00110000,
0b00111100,
0b00011000,
0b00100000,

0b00000100,
0b00111000,
0b00011100,
0b00100000,

0b00000001,
0b00111111,
0b00001100,
0b00110000,

0b00000100,
0b00101100,
0b00110100,
0b00100100,

0b00011111,
0b11100000,

0b11111111,

0b10000001,
0b10001111,
0b11110000,

0b00010000,
0b00010000,
0b00001000,
0b00001000};
#endif
