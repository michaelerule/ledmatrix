#ifndef liberation_mono_bold_8_H
#define liberation_mono_bold_8_H
#include <stdint.h>
// font: Liberation Mono
// style: bold
// size: 8
// entropy: 64.6771504572 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,1,4,9,13,18,23,24,27,29,32,36,38,41,42,45,49,52,56,59,64,67,71,74,78,82,83,85,89,93,97,100,105,110,114,119,122,125,128,132,135,138,142,145,148,152,155,160,163,168,172,177,182,185,190,195,199,203,207,210,213,215,219,224,226,231,234,238,242,246,250,254,257,261,264,267,271,276,279,283,286,290,293,296,299,302,306,311,314,318,321,324,325,328};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
1,3,5,4,5,5,1,3,2,3,4,2,3,1,3,4,3,4,3,5,3,4,3,4,4,1,2,4,4,4,3,5,5,4,5,3,3,3,4,3,3,4,3,3,4,3,5,3,5,4,5,5,3,5,5,4,4,4,3,3,2,4,5,2,5,3,4,4,4,4,4,3,4,3,3,4,5,3,4,3,4,3,3,3,3,4,5,3,4,3,3,1,3,4};
PROGMEM prog_uint8_t  font_data[332] = {
0b01110100,

0b11100000,
0b00000000,
0b11100000,

0b00101000,
0b01111100,
0b00101100,
0b01111000,
0b00100000,

0b00001000,
0b01100100,
0b11111110,
0b01011100,

0b01100100,
0b01101000,
0b00111000,
0b01010100,
0b00001100,

0b00001100,
0b01110100,
0b01101100,
0b01011100,
0b00000100,

0b11100000,

0b00111000,
0b11100111,
0b00000001,

0b10000001,
0b01111110,

0b01100000,
0b11000000,
0b01100000,

0b00010000,
0b00010000,
0b01111000,
0b00010000,

0b00000010,
0b00000100,

0b00010000,
0b00010000,
0b00010000,

0b00000100,

0b00001100,
0b00110000,
0b11000000,

0b00010000,
0b01111100,
0b01010100,
0b01111100,

0b01000100,
0b01111100,
0b00000100,

0b00000100,
0b01001100,
0b01010100,
0b01100100,

0b01000100,
0b01010100,
0b01111100,

0b00001000,
0b00111000,
0b01001000,
0b01111100,
0b00001000,

0b01110100,
0b01100100,
0b01011100,

0b00010000,
0b01111100,
0b01100100,
0b01011100,

0b01000100,
0b01011000,
0b01100000,

0b00001000,
0b01111100,
0b01010100,
0b01111100,

0b00100000,
0b01110100,
0b01010100,
0b01111100,

0b00100100,

0b00000010,
0b00100100,

0b00010000,
0b00110000,
0b00101000,
0b01001000,

0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000000,
0b00101000,
0b00101000,
0b00110000,

0b01000000,
0b01010100,
0b01100000,

0b01111100,
0b10111010,
0b11001010,
0b10110110,
0b01111000,

0b00001100,
0b01111000,
0b01001000,
0b00111000,
0b00000100,

0b01111100,
0b01010100,
0b01111100,
0b00001000,

0b00111000,
0b01101100,
0b01000100,
0b01001100,
0b00001000,

0b01111100,
0b01000100,
0b01111100,

0b01111100,
0b01010100,
0b01010100,

0b01111100,
0b01010000,
0b01010000,

0b00111000,
0b01101100,
0b01010100,
0b01011100,

0b01111100,
0b00010000,
0b01111100,

0b01000100,
0b01111100,
0b01000100,

0b00001000,
0b00001100,
0b01000100,
0b01111100,

0b01111100,
0b00110000,
0b01001100,

0b01111100,
0b00000100,
0b00000100,

0b01111100,
0b01100000,
0b00011000,
0b01111100,

0b01111100,
0b00111000,
0b01111100,

0b00111000,
0b01101100,
0b01000100,
0b01111100,
0b00010000,

0b01111100,
0b01010000,
0b01110000,

0b00111000,
0b01101100,
0b01000110,
0b01111101,
0b00010000,

0b01111100,
0b01010000,
0b01111100,
0b00100000,

0b00100000,
0b01110100,
0b01010100,
0b01011100,
0b00001000,

0b01000000,
0b01000000,
0b01111100,
0b01000000,
0b01000000,

0b01111100,
0b00000100,
0b01111100,

0b01000000,
0b00111000,
0b00001100,
0b01111000,
0b01000000,

0b01110000,
0b00001100,
0b00110000,
0b00011100,
0b01100000,

0b00000100,
0b01101100,
0b00110000,
0b01001100,

0b01000000,
0b01100000,
0b00011100,
0b01100000,

0b00000100,
0b01001100,
0b01110100,
0b01100100,

0b11111111,
0b11111111,
0b10000001,

0b01000000,
0b00110000,
0b00001100,

0b10000001,
0b11111111,

0b00010000,
0b01100000,
0b11000000,
0b00110000,

0b00000010,
0b00000010,
0b00000010,
0b00000010,
0b00000010,

0b10000000,
0b10000000,

0b00001000,
0b00101100,
0b00110100,
0b00111100,
0b00000100,

0b11111100,
0b00100100,
0b00111100,

0b00011000,
0b00111100,
0b00100100,
0b00100100,

0b00011000,
0b00111100,
0b00100100,
0b11111100,

0b00011000,
0b00111100,
0b00110100,
0b00110100,

0b00100000,
0b01111100,
0b11111100,
0b10100000,

0b00010000,
0b00111111,
0b00100101,
0b00111110,

0b11111100,
0b00100000,
0b00111100,

0b00000100,
0b00100100,
0b10111100,
0b00000100,

0b00000001,
0b00100001,
0b10111110,

0b11111100,
0b00011000,
0b00101100,

0b00000100,
0b10000100,
0b11111100,
0b00000100,

0b00111100,
0b00100000,
0b00111100,
0b00100000,
0b00011100,

0b00111100,
0b00100000,
0b00111100,

0b00011000,
0b00111100,
0b00100100,
0b00111100,

0b00111111,
0b00100100,
0b00111100,

0b00011000,
0b00111100,
0b00100100,
0b00111111,

0b00111100,
0b00100000,
0b00100000,

0b00110100,
0b00110100,
0b00101100,

0b01111100,
0b00100100,
0b00100100,

0b00111100,
0b00000100,
0b00111100,

0b00100000,
0b00111000,
0b00000100,
0b00111000,

0b00110000,
0b00001100,
0b00010000,
0b00001100,
0b00110000,

0b00101100,
0b00011000,
0b00101100,

0b00100000,
0b00111001,
0b00000110,
0b00111000,

0b00101100,
0b00110100,
0b00100100,

0b00011000,
0b11111111,
0b10000001,

0b11111111,

0b10000001,
0b11111111,
0b00010000,

0b00010000,
0b00010000,
0b00010000,
0b00010000};
#endif
