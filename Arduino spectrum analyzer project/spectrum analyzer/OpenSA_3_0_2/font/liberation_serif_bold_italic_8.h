#ifndef liberation_serif_bold_italic_8_H
#define liberation_serif_bold_italic_8_H
#include <stdint.h>
// font: Liberation Serif
// style: bold_italic
// size: 8
// entropy: 65.7344264552 %
uint8_t  font_nbytes  = 1;
uint8_t  font_nglyphs = 94;
uint8_t  font_height  = 8;
int8_t   font_top     = -5;
PROGMEM prog_uint16_t font_glyphStart[94] = {
0,2,5,9,13,20,25,26,29,31,34,39,40,43,44,47,51,54,58,61,65,69,73,77,81,85,87,89,93,98,101,104,111,115,119,124,130,135,140,146,152,155,159,165,170,177,184,190,195,201,206,210,214,220,225,232,238,244,249,252,253,255,258,262,263,266,270,274,278,281,284,288,292,294,296,300,302,307,311,315,319,323,326,329,331,334,338,343,347,351,354,357,358,360};
PROGMEM prog_uint16_t font_glyphWidth[94] = {
2,3,4,4,7,5,1,3,2,3,5,1,3,1,3,4,3,4,3,4,4,4,4,4,4,2,2,4,5,3,3,7,4,4,5,6,5,5,6,6,3,4,6,5,7,7,6,5,6,5,4,4,6,5,7,6,6,5,3,1,2,3,4,1,3,4,4,4,3,3,4,4,2,2,4,2,5,4,4,4,4,3,3,2,3,4,5,4,4,3,3,1,2,4};
PROGMEM prog_uint8_t  font_data[364] = {
0b00000100,
0b01110000,

0b01100000,
0b00000000,
0b01100000,

0b00111100,
0b01101000,
0b00111100,
0b01101000,

0b00001100,
0b01111110,
0b11010100,
0b01001000,

0b00110000,
0b01010100,
0b01101000,
0b00010000,
0b00101100,
0b01010100,
0b00011000,

0b00001100,
0b01110100,
0b01011100,
0b01101100,
0b00011100,

0b01100000,

0b00111110,
0b01100001,
0b10000000,

0b10000110,
0b01111000,

0b01100000,
0b01110000,
0b00110000,

0b00010000,
0b00010000,
0b01111100,
0b00010000,
0b00010000,

0b00000110,

0b00001000,
0b00001000,
0b00001000,

0b00000100,

0b00001100,
0b00110000,
0b01000000,

0b00111100,
0b01100100,
0b01001100,
0b01111000,

0b00000100,
0b01011100,
0b01100100,

0b00000100,
0b01001100,
0b01010100,
0b01100100,

0b00000100,
0b01011100,
0b01100000,

0b00001000,
0b00011000,
0b00111100,
0b01101000,

0b00000100,
0b01110100,
0b01011100,
0b01000000,

0b00111100,
0b01110100,
0b01010100,
0b01011000,

0b01000100,
0b01001000,
0b01110000,
0b01000000,

0b00001100,
0b01110100,
0b01010100,
0b01101100,

0b00110100,
0b01010100,
0b01010100,
0b01111000,

0b00000100,
0b00100000,

0b00000110,
0b00100000,

0b00010000,
0b00101000,
0b00101000,
0b01000100,

0b00101000,
0b00101000,
0b00101000,
0b00101000,
0b00101000,

0b01000100,
0b00101000,
0b00010000,

0b01000100,
0b01011000,
0b01110000,

0b00011110,
0b00100011,
0b01001101,
0b01010101,
0b01011101,
0b01000110,
0b00111000,

0b00001100,
0b00111000,
0b01001100,
0b00111100,

0b00000100,
0b01011100,
0b01110100,
0b01111100,

0b00111000,
0b01100100,
0b01000100,
0b01001100,
0b01100000,

0b00000100,
0b01011100,
0b01100100,
0b01000100,
0b01001100,
0b00111000,

0b00000100,
0b01011100,
0b01110100,
0b01011100,
0b01000000,

0b00000100,
0b01011100,
0b01110100,
0b01011000,
0b01000000,

0b00111000,
0b00100100,
0b01000100,
0b01000100,
0b01011100,
0b01010000,

0b00000100,
0b01011100,
0b01110100,
0b00010100,
0b01011100,
0b01100100,

0b00000100,
0b01011100,
0b01100100,

0b00000100,
0b01001100,
0b01110000,
0b01000000,

0b00000100,
0b01011100,
0b01100100,
0b00110000,
0b01001100,
0b01000100,

0b00000100,
0b01011100,
0b01100100,
0b01000100,
0b00001100,

0b00000100,
0b01011100,
0b01100100,
0b01111000,
0b00110100,
0b01011100,
0b01100100,

0b00000100,
0b01011100,
0b01100100,
0b01110000,
0b01001100,
0b01110000,
0b01000000,

0b00111000,
0b01100100,
0b01000100,
0b01000100,
0b01001100,
0b00111000,

0b00000100,
0b01011100,
0b01110100,
0b01010000,
0b01100000,

0b00111000,
0b01100100,
0b01000100,
0b01000110,
0b01001110,
0b00111000,

0b00000100,
0b01011100,
0b01111100,
0b01111100,
0b00000100,

0b00001100,
0b01100100,
0b01010100,
0b01011000,

0b01000100,
0b01011100,
0b01100100,
0b01000000,

0b01111100,
0b01000100,
0b00000100,
0b01001100,
0b01110000,
0b01000000,

0b01110000,
0b01001100,
0b00010000,
0b01100000,
0b01000000,

0b01000000,
0b01110000,
0b01011100,
0b01100000,
0b00111000,
0b01001100,
0b01110000,

0b01000100,
0b01101100,
0b01010100,
0b01101100,
0b01000100,
0b01000000,

0b01000000,
0b01100100,
0b01111100,
0b01010100,
0b01100000,
0b01000000,

0b00000100,
0b01001100,
0b01010100,
0b01100100,
0b01001100,

0b00001110,
0b11110010,
0b10000000,

0b00111000,

0b10001110,
0b11110000,

0b00011000,
0b01100000,
0b00011000,

0b00000001,
0b00000001,
0b00000001,
0b00000001,

0b01000000,

0b00011100,
0b00100100,
0b00111100,

0b00011100,
0b11100100,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00100100,
0b00110000,

0b00011100,
0b00100100,
0b10111100,
0b11000000,

0b00011100,
0b00101100,
0b00110000,

0b00100111,
0b11111000,
0b10000000,

0b00011101,
0b00100101,
0b00100111,
0b00111000,

0b00011100,
0b11110000,
0b00100000,
0b00111100,

0b00111100,
0b10000000,

0b00100111,
0b10111000,

0b00011100,
0b11110000,
0b00010000,
0b00111100,

0b00011100,
0b11100000,

0b00111100,
0b00110000,
0b00111100,
0b00010000,
0b00111100,

0b00111100,
0b00110000,
0b00100000,
0b00111100,

0b00011100,
0b00100100,
0b00100100,
0b00111000,

0b00100111,
0b00111101,
0b00100100,
0b00111000,

0b00011100,
0b00100100,
0b00100111,
0b00111000,

0b00111100,
0b00100000,
0b00100000,

0b00110100,
0b00110100,
0b00101100,

0b00111100,
0b01100100,

0b00111100,
0b00000100,
0b00111100,

0b00111000,
0b00000100,
0b00001000,
0b00110000,

0b00111000,
0b00001100,
0b00110000,
0b00001100,
0b00110000,

0b00000100,
0b00111000,
0b00011000,
0b00101100,

0b00111011,
0b00000100,
0b00001000,
0b00110000,

0b00100100,
0b00111100,
0b00100100,

0b00011110,
0b11100010,
0b10000000,

0b11111111,

0b10001110,
0b11110000,

0b00011000,
0b00010000,
0b00001000,
0b00011000};
#endif
